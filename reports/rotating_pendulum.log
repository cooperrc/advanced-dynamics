Traceback (most recent call last):
  File "/home/ryan/.local/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
anim = animation.FuncAnimation(fig, animate, init_func=init,
                               frames=range(0,len(t)), interval=10, 
                               blit=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m<ipython-input-10-d31ec1715c6c>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m anim = animation.FuncAnimation(fig, animate, init_func=init,
[0m[1;32m      2[0m                                [0mframes[0m[0;34m=[0m[0mrange[0m[0;34m([0m[0;36m0[0m[0;34m,[0m[0mlen[0m[0;34m([0m[0mt[0m[0;34m)[0m[0;34m)[0m[0;34m,[0m [0minterval[0m[0;34m=[0m[0;36m10[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m                                blit=True)

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m__init__[0;34m(self, fig, func, frames, init_func, fargs, save_count, cache_frame_data, **kwargs)[0m
[1;32m   1654[0m         [0mself[0m[0;34m.[0m[0m_save_seq[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m   1655[0m [0;34m[0m[0m
[0;32m-> 1656[0;31m         [0mTimedAnimation[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mfig[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1657[0m [0;34m[0m[0m
[1;32m   1658[0m         [0;31m# Need to reset the saved seq, since right now it will contain data[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m__init__[0;34m(self, fig, interval, repeat_delay, repeat, event_source, *args, **kwargs)[0m
[1;32m   1413[0m         [0;32mif[0m [0mevent_source[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1414[0m             [0mevent_source[0m [0;34m=[0m [0mfig[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mnew_timer[0m[0;34m([0m[0minterval[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0m_interval[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1415[0;31m         Animation.__init__(self, fig, event_source=event_source,
[0m[1;32m   1416[0m                            *args, **kwargs)
[1;32m   1417[0m [0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m__init__[0;34m(self, fig, event_source, blit)[0m
[1;32m    943[0m                                                       self._stop)
[1;32m    944[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_blit[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 945[0;31m             [0mself[0m[0;34m.[0m[0m_setup_blit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    946[0m [0;34m[0m[0m
[1;32m    947[0m     [0;32mdef[0m [0m_start[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m_setup_blit[0;34m(self)[0m
[1;32m   1247[0m         self._resize_id = self._fig.canvas.mpl_connect('resize_event',
[1;32m   1248[0m                                                        self._on_resize)
[0;32m-> 1249[0;31m         [0mself[0m[0;34m.[0m[0m_post_draw[0m[0;34m([0m[0;32mNone[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_blit[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1250[0m [0;34m[0m[0m
[1;32m   1251[0m     [0;32mdef[0m [0m_on_resize[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mevent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m_post_draw[0;34m(self, framedata, blit)[0m
[1;32m   1200[0m             [0mself[0m[0;34m.[0m[0m_blit_draw[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_drawn_artists[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1201[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1202[0;31m             [0mself[0m[0;34m.[0m[0m_fig[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mdraw_idle[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1203[0m [0;34m[0m[0m
[1;32m   1204[0m     [0;31m# The rest of the code in this class is to facilitate easy blitting[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/backend_bases.py[0m in [0;36mdraw_idle[0;34m(self, *args, **kwargs)[0m
[1;32m   2010[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_is_idle_drawing[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2011[0m             [0;32mwith[0m [0mself[0m[0;34m.[0m[0m_idle_draw_cntx[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2012[0;31m                 [0mself[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2013[0m [0;34m[0m[0m
[1;32m   2014[0m     [0;34m@[0m[0mcbook[0m[0;34m.[0m[0mdeprecated[0m[0;34m([0m[0;34m"3.2"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py[0m in [0;36mdraw[0;34m(self)[0m
[1;32m    405[0m              (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar
[1;32m    406[0m               else nullcontext()):
[0;32m--> 407[0;31m             [0mself[0m[0;34m.[0m[0mfigure[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    408[0m             [0;31m# A GUI class may be need to update a window using this draw, so[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    409[0m             [0;31m# don't forget to call the superclass.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/artist.py[0m in [0;36mdraw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     39[0m                 [0mrenderer[0m[0;34m.[0m[0mstart_filter[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     40[0m [0;34m[0m[0m
[0;32m---> 41[0;31m             [0;32mreturn[0m [0mdraw[0m[0;34m([0m[0martist[0m[0;34m,[0m [0mrenderer[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     42[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     43[0m             [0;32mif[0m [0martist[0m[0;34m.[0m[0mget_agg_filter[0m[0;34m([0m[0;34m)[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/figure.py[0m in [0;36mdraw[0;34m(self, renderer)[0m
[1;32m   1868[0m             [0mself[0m[0;34m.[0m[0mstale[0m [0;34m=[0m [0;32mFalse[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1869[0m [0;34m[0m[0m
[0;32m-> 1870[0;31m         [0mself[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mdraw_event[0m[0;34m([0m[0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1871[0m [0;34m[0m[0m
[1;32m   1872[0m     [0;32mdef[0m [0mdraw_artist[0m[0;34m([0m[0mself[0m[0;34m,[0m [0ma[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/backend_bases.py[0m in [0;36mdraw_event[0;34m(self, renderer)[0m
[1;32m   1757[0m         [0ms[0m [0;34m=[0m [0;34m'draw_event'[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1758[0m         [0mevent[0m [0;34m=[0m [0mDrawEvent[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mself[0m[0;34m,[0m [0mrenderer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1759[0;31m         [0mself[0m[0;34m.[0m[0mcallbacks[0m[0;34m.[0m[0mprocess[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mevent[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1760[0m [0;34m[0m[0m
[1;32m   1761[0m     [0;32mdef[0m [0mresize_event[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/cbook/__init__.py[0m in [0;36mprocess[0;34m(self, s, *args, **kwargs)[0m
[1;32m    227[0m                 [0;32mexcept[0m [0mException[0m [0;32mas[0m [0mexc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    228[0m                     [0;32mif[0m [0mself[0m[0;34m.[0m[0mexception_handler[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 229[0;31m                         [0mself[0m[0;34m.[0m[0mexception_handler[0m[0;34m([0m[0mexc[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    230[0m                     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    231[0m                         [0;32mraise[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/cbook/__init__.py[0m in [0;36m_exception_printer[0;34m(exc)[0m
[1;32m     79[0m [0;32mdef[0m [0m_exception_printer[0m[0;34m([0m[0mexc[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     80[0m     [0;32mif[0m [0m_get_running_interactive_framework[0m[0;34m([0m[0;34m)[0m [0;32min[0m [0;34m[[0m[0;34m"headless"[0m[0;34m,[0m [0;32mNone[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 81[0;31m         [0;32mraise[0m [0mexc[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     82[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m         [0mtraceback[0m[0;34m.[0m[0mprint_exc[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/cbook/__init__.py[0m in [0;36mprocess[0;34m(self, s, *args, **kwargs)[0m
[1;32m    222[0m             [0;32mif[0m [0mfunc[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    223[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m                     [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m                 [0;31m# this does not capture KeyboardInterrupt, SystemExit,[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m                 [0;31m# and GeneratorExit[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m_start[0;34m(self, *args)[0m
[1;32m    957[0m [0;34m[0m[0m
[1;32m    958[0m         [0;31m# Now do any initial draw[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 959[0;31m         [0mself[0m[0;34m.[0m[0m_init_draw[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    960[0m [0;34m[0m[0m
[1;32m    961[0m         [0;31m# Add our callback for stepping the animation and[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/animation.py[0m in [0;36m_init_draw[0;34m(self)[0m
[1;32m   1704[0m [0;34m[0m[0m
[1;32m   1705[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1706[0;31m             [0mself[0m[0;34m.[0m[0m_drawn_artists[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_init_func[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1707[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m_blit[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1708[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0m_drawn_artists[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-9-d3c6e4c167b7>[0m in [0;36minit[0;34m()[0m
[1;32m     15[0m [0;32mdef[0m [0minit[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     16[0m     [0mline1[0m[0;34m.[0m[0mset_data[0m[0;34m([0m[0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 17[0;31m     [0mline1[0m[0;34m.[0m[0mset_3d_properties[0m[0;34m([0m[0;34m[[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m     [0mline2[0m[0;34m.[0m[0mset_data[0m[0;34m([0m[0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     19[0m     [0mline2[0m[0;34m.[0m[0mset_3d_properties[0m[0;34m([0m[0;34m[[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/mpl_toolkits/mplot3d/art3d.py[0m in [0;36mset_3d_properties[0;34m(self, zs, zdir)[0m
[1;32m    141[0m         [0mxs[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_xdata[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    142[0m         [0mys[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_ydata[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 143[0;31m         [0mzs[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mbroadcast_to[0m[0;34m([0m[0mzs[0m[0;34m,[0m [0mxs[0m[0;34m.[0m[0mshape[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    144[0m         [0mself[0m[0;34m.[0m[0m_verts3d[0m [0;34m=[0m [0mjuggle_axes[0m[0;34m([0m[0mxs[0m[0;34m,[0m [0mys[0m[0;34m,[0m [0mzs[0m[0;34m,[0m [0mzdir[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    145[0m         [0mself[0m[0;34m.[0m[0mstale[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;31mAttributeError[0m: 'list' object has no attribute 'shape'
AttributeError: 'list' object has no attribute 'shape'

